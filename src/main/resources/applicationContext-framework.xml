<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-2.5.xsd"
	default-autowire="byName">
	<!-- <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" 
		destroy-method="close"> <property name="driverClass"> <value>oracle.jdbc.driver.OracleDriver</value> 
		</property> <property name="jdbcUrl"> <value>${db.url} </value> </property> 
		<property name="user"> <value>${db.username}</value> </property> <property 
		name="password"> <value>${db.password}</value> </property> <property name="initialPoolSize"> 
		<value>${db.initialPoolSize}</value> </property> <property name="minPoolSize"> 
		<value>${db.minPoolSize}</value> </property> <property name="maxPoolSize"> 
		<value>${db.maxPoolSize}</value> </property> </bean> <bean id="sessionFactory" 
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"> <property 
		name="mappingDirectoryLocations"> <list> <value>classpath*:/com/synnex/tms/framework/entity/</value> 
		<value>classpath*:/com/synnex/tms/biz/entity/</value> </list> </property> 
		<property name="hibernateProperties"> <props> <prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop> 
		<prop key="hibernate.show_sql">${hibernate.show_sql}</prop> <prop key="hibernate.format_sql">true</prop> 
		<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop> </props> 
		</property> <property name="dataSource"> <ref bean="dataSource" /> </property> 
		</bean> <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate"> 
		<property name="sessionFactory"> <ref bean="sessionFactory" /> </property> 
		</bean> <bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager"> 
		<property name="sessionFactory" ref="sessionFactory" /> </bean> <aop:config> 
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.synnex.tms.framework.service.impl.*.*(..))" 
		/> </aop:config> <aop:config> <aop:advisor advice-ref="txAdvice" pointcut="execution(* 
		com.synnex.tms.biz.service.impl.*.*(..))" /> </aop:config> <aop:config> <aop:advisor 
		advice-ref="txAdvice" pointcut="execution(* com.synnex.tms.mobile.*.service.impl.*.*(..))" 
		/> </aop:config> <tx:advice id="txAdvice" transaction-manager="txManager"> 
		<tx:attributes> <tx:method name="get*" read-only="true" /> <tx:method name="dispatchDOByPreinstalledLine" 
		no-rollback-for="com.synnex.tms.biz.service.impl.DeliveryOrderWithoutLineException" 
		/> <tx:method name="calcCosts" no-rollback-for="com.synnex.tms.biz.exception.costs.CanNotFindValidDataSourceException, 
		ognl.OgnlException, com.synnex.tms.biz.service.impl.CargoOwnerRateNotFoundException, 
		java.lang.Exception" /> <tx:method name="*" rollback-for="java.lang.Exception" 
		/> </tx:attributes> </tx:advice> -->

</beans>